DROP TABLE IF EXISTS film_likes, friendship, users, film_genres, genres, mpa_ratings, films;

CREATE TABLE mpa_ratings
(
    id   INT PRIMARY KEY,
    name VARCHAR(10) NOT NULL UNIQUE
);

CREATE TABLE films
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INT CHECK (duration > 0),
    mpa_id       INT,
    FOREIGN KEY (mpa_id) REFERENCES mpa_ratings (id) ON DELETE SET NULL
);

CREATE TABLE genres
(
    id   INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE film_genres
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_id INT    NOT NULL,
    film_id  BIGINT NOT NULL,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres (id) ON DELETE CASCADE,
    UNIQUE (genre_id, film_id)
);

CREATE TABLE users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login    VARCHAR(255) NOT NULL,
    name     VARCHAR(255),
    email    VARCHAR(255) NOT NULL,
    birthday DATE,
    CONSTRAINT login_no_spaces CHECK (login NOT LIKE '% %')
);

CREATE TABLE friendship
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id   BIGINT  NOT NULL,
    friend_id BIGINT  NOT NULL,
    status    BOOLEAN NOT NULL DEFAULT false,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE,
    UNIQUE (user_id, friend_id)
);

CREATE TABLE film_likes
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    UNIQUE (film_id, user_id)
);